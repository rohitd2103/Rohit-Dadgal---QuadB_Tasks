{"ast":null,"code":"var _jsxFileName = \"/home/rohit/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CONTRACT_ADDRESS = \"0x3E0d0Cb98388a743EaADbfA2032148c413516CFE\";\nconst CONTRACT_ABI = [\n// Paste your contract ABI here\n{\n  \"inputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"_value\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"simpleTransaction\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"_value\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"storageTransaction\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"_key\",\n    \"type\": \"uint256\"\n  }, {\n    \"internalType\": \"string\",\n    \"name\": \"_value\",\n    \"type\": \"string\"\n  }],\n  \"name\": \"complexTransaction\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"string\",\n    \"name\": \"_txType1\",\n    \"type\": \"string\"\n  }, {\n    \"internalType\": \"string\",\n    \"name\": \"_txType2\",\n    \"type\": \"string\"\n  }],\n  \"name\": \"compareTransactions\",\n  \"outputs\": [{\n    \"internalType\": \"string\",\n    \"name\": \"\",\n    \"type\": \"string\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}];\nfunction App() {\n  _s();\n  const [contract, setContract] = useState(null);\n  const [account, setAccount] = useState(\"\");\n  const [gasResults, setGasResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [comparison, setComparison] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    const init = async () => {\n      if (window.ethereum) {\n        try {\n          const provider = new ethers.BrowserProvider(window.ethereum);\n          await provider.send(\"eth_requestAccounts\", []);\n          const signer = await provider.getSigner();\n          const address = await signer.getAddress();\n          setAccount(address);\n          const gasContract = new ethers.Contract(CONTRACT_ADDRESS, CONTRACT_ABI, signer);\n          setContract(gasContract);\n          console.log(\"Contract initialized:\", gasContract);\n        } catch (err) {\n          console.error(\"Initialization error:\", err);\n          setError(`Connection error: ${err.message}`);\n        }\n      } else {\n        setError(\"Please install MetaMask!\");\n      }\n    };\n    init();\n  }, []);\n  const executeTransaction = async txType => {\n    if (!contract) {\n      setError(\"Contract not initialized\");\n      return;\n    }\n    setLoading(true);\n    setError(\"\");\n    try {\n      console.log(`Executing ${txType} transaction...`);\n      let tx;\n      let args = [];\n      switch (txType) {\n        case \"simple\":\n          args = [Math.floor(Math.random() * 100)];\n          tx = await contract.simpleTransaction(...args);\n          break;\n        case \"storage\":\n          args = [Math.floor(Math.random() * 100)];\n          tx = await contract.storageTransaction(...args);\n          break;\n        case \"complex\":\n          args = [Math.floor(Math.random() * 100), `test-${Math.floor(Math.random() * 100)}`];\n          tx = await contract.complexTransaction(...args);\n          break;\n        default:\n          throw new Error(\"Unknown transaction type\");\n      }\n      console.log(\"Transaction sent:\", tx.hash);\n      const receipt = await tx.wait();\n      console.log(\"Transaction mined:\", receipt);\n      setGasResults(prev => [...prev, {\n        type: txType,\n        gasUsed: receipt.gasUsed.toString(),\n        txHash: tx.hash,\n        args: args\n      }]);\n    } catch (err) {\n      console.error(\"Transaction error:\", err);\n      setError(`Transaction failed: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const compareTransactions = async () => {\n    if (!contract) {\n      setError(\"Contract not initialized\");\n      return;\n    }\n    if (gasResults.length < 2) {\n      setError(\"Need at least 2 transactions to compare\");\n      return;\n    }\n    try {\n      const tx1 = gasResults[gasResults.length - 2];\n      const tx2 = gasResults[gasResults.length - 1];\n      const result = await contract.compareTransactions(tx1.type === \"simple\" ? \"Simple\" : tx1.type === \"storage\" ? \"Storage\" : \"Complex\", tx2.type === \"simple\" ? \"Simple\" : tx2.type === \"storage\" ? \"Storage\" : \"Complex\");\n      setComparison(result);\n      setError(\"\");\n    } catch (err) {\n      console.error(\"Comparison error:\", err);\n      setError(`Comparison failed: ${err.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Gas Fee Comparison DApp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Connected Account: \", account ? `${account.substring(0, 6)}...${account.substring(38)}` : \"Not connected\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Contract Address: \", CONTRACT_ADDRESS]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transaction-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Execute Transactions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => executeTransaction(\"simple\"),\n          disabled: loading,\n          children: loading ? \"Processing...\" : \"Simple Transaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => executeTransaction(\"storage\"),\n          disabled: loading,\n          children: loading ? \"Processing...\" : \"Storage Transaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => executeTransaction(\"complex\"),\n          disabled: loading,\n          children: loading ? \"Processing...\" : \"Complex Transaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Transaction Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), gasResults.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No transactions yet. Execute a transaction above.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Args\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Gas Used\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Transaction\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: gasResults.map((result, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: result.type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: JSON.stringify(result.args)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: result.gasUsed\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: `https://sepolia.etherscan.io/tx/${result.txHash}`,\n                  target: \"_blank\",\n                  rel: \"noopener noreferrer\",\n                  children: [result.txHash.substring(0, 10), \"...\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comparison\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: compareTransactions,\n            children: \"Compare Last Two Transactions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this), comparison && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comparison-result\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Comparison Result:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: comparison\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"kZsuTLvEePiRp3IhZh8qXxN4zZ8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ethers","jsxDEV","_jsxDEV","Fragment","_Fragment","CONTRACT_ADDRESS","CONTRACT_ABI","App","_s","contract","setContract","account","setAccount","gasResults","setGasResults","loading","setLoading","comparison","setComparison","error","setError","init","window","ethereum","provider","BrowserProvider","send","signer","getSigner","address","getAddress","gasContract","Contract","console","log","err","message","executeTransaction","txType","tx","args","Math","floor","random","simpleTransaction","storageTransaction","complexTransaction","Error","hash","receipt","wait","prev","type","gasUsed","toString","txHash","compareTransactions","length","tx1","tx2","result","className","children","fileName","_jsxFileName","lineNumber","columnNumber","substring","onClick","disabled","map","index","JSON","stringify","href","target","rel","_c","$RefreshReg$"],"sources":["/home/rohit/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport './App.css';\n\nconst CONTRACT_ADDRESS = \"0x3E0d0Cb98388a743EaADbfA2032148c413516CFE\";\nconst CONTRACT_ABI = [\n  // Paste your contract ABI here\n  {\n    \"inputs\": [\n      {\"internalType\": \"uint256\", \"name\": \"_value\", \"type\": \"uint256\"}\n    ],\n    \"name\": \"simpleTransaction\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\"internalType\": \"uint256\", \"name\": \"_value\", \"type\": \"uint256\"}\n    ],\n    \"name\": \"storageTransaction\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\"internalType\": \"uint256\", \"name\": \"_key\", \"type\": \"uint256\"},\n      {\"internalType\": \"string\", \"name\": \"_value\", \"type\": \"string\"}\n    ],\n    \"name\": \"complexTransaction\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\"internalType\": \"string\", \"name\": \"_txType1\", \"type\": \"string\"},\n      {\"internalType\": \"string\", \"name\": \"_txType2\", \"type\": \"string\"}\n    ],\n    \"name\": \"compareTransactions\",\n    \"outputs\": [{\"internalType\": \"string\", \"name\": \"\", \"type\": \"string\"}],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }\n];\n\nfunction App() {\n  const [contract, setContract] = useState(null);\n  const [account, setAccount] = useState(\"\");\n  const [gasResults, setGasResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [comparison, setComparison] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    const init = async () => {\n      if (window.ethereum) {\n        try {\n          const provider = new ethers.BrowserProvider(window.ethereum);\n          await provider.send(\"eth_requestAccounts\", []);\n          const signer = await provider.getSigner();\n          const address = await signer.getAddress();\n          setAccount(address);\n          \n          const gasContract = new ethers.Contract(\n            CONTRACT_ADDRESS,\n            CONTRACT_ABI,\n            signer\n          );\n          setContract(gasContract);\n          console.log(\"Contract initialized:\", gasContract);\n        } catch (err) {\n          console.error(\"Initialization error:\", err);\n          setError(`Connection error: ${err.message}`);\n        }\n      } else {\n        setError(\"Please install MetaMask!\");\n      }\n    };\n    init();\n  }, []);\n\n  const executeTransaction = async (txType) => {\n    if (!contract) {\n      setError(\"Contract not initialized\");\n      return;\n    }\n    \n    setLoading(true);\n    setError(\"\");\n    \n    try {\n      console.log(`Executing ${txType} transaction...`);\n      let tx;\n      let args = [];\n      \n      switch(txType) {\n        case \"simple\":\n          args = [Math.floor(Math.random() * 100)];\n          tx = await contract.simpleTransaction(...args);\n          break;\n        case \"storage\":\n          args = [Math.floor(Math.random() * 100)];\n          tx = await contract.storageTransaction(...args);\n          break;\n        case \"complex\":\n          args = [\n            Math.floor(Math.random() * 100),\n            `test-${Math.floor(Math.random() * 100)}`\n          ];\n          tx = await contract.complexTransaction(...args);\n          break;\n        default:\n          throw new Error(\"Unknown transaction type\");\n      }\n      \n      console.log(\"Transaction sent:\", tx.hash);\n      const receipt = await tx.wait();\n      console.log(\"Transaction mined:\", receipt);\n      \n      setGasResults(prev => [...prev, {\n        type: txType,\n        gasUsed: receipt.gasUsed.toString(),\n        txHash: tx.hash,\n        args: args\n      }]);\n      \n    } catch (err) {\n      console.error(\"Transaction error:\", err);\n      setError(`Transaction failed: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const compareTransactions = async () => {\n    if (!contract) {\n      setError(\"Contract not initialized\");\n      return;\n    }\n    \n    if (gasResults.length < 2) {\n      setError(\"Need at least 2 transactions to compare\");\n      return;\n    }\n    \n    try {\n      const tx1 = gasResults[gasResults.length - 2];\n      const tx2 = gasResults[gasResults.length - 1];\n      \n      const result = await contract.compareTransactions(\n        tx1.type === \"simple\" ? \"Simple\" : \n        tx1.type === \"storage\" ? \"Storage\" : \"Complex\",\n        tx2.type === \"simple\" ? \"Simple\" : \n        tx2.type === \"storage\" ? \"Storage\" : \"Complex\"\n      );\n      \n      setComparison(result);\n      setError(\"\");\n    } catch (err) {\n      console.error(\"Comparison error:\", err);\n      setError(`Comparison failed: ${err.message}`);\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <header>\n        <h1>Gas Fee Comparison DApp</h1>\n        <p>Connected Account: {account ? `${account.substring(0, 6)}...${account.substring(38)}` : \"Not connected\"}</p>\n        <p>Contract Address: {CONTRACT_ADDRESS}</p>\n      </header>\n\n      {error && <div className=\"error\">{error}</div>}\n\n      <div className=\"transaction-section\">\n        <h2>Execute Transactions</h2>\n        <div className=\"buttons\">\n          <button \n            onClick={() => executeTransaction(\"simple\")}\n            disabled={loading}\n          >\n            {loading ? \"Processing...\" : \"Simple Transaction\"}\n          </button>\n          <button \n            onClick={() => executeTransaction(\"storage\")}\n            disabled={loading}\n          >\n            {loading ? \"Processing...\" : \"Storage Transaction\"}\n          </button>\n          <button \n            onClick={() => executeTransaction(\"complex\")}\n            disabled={loading}\n          >\n            {loading ? \"Processing...\" : \"Complex Transaction\"}\n          </button>\n        </div>\n      </div>\n\n      <div className=\"results-section\">\n        <h2>Transaction Results</h2>\n        {gasResults.length === 0 ? (\n          <p>No transactions yet. Execute a transaction above.</p>\n        ) : (\n          <>\n            <table>\n              <thead>\n                <tr>\n                  <th>Type</th>\n                  <th>Args</th>\n                  <th>Gas Used</th>\n                  <th>Transaction</th>\n                </tr>\n              </thead>\n              <tbody>\n                {gasResults.map((result, index) => (\n                  <tr key={index}>\n                    <td>{result.type}</td>\n                    <td>{JSON.stringify(result.args)}</td>\n                    <td>{result.gasUsed}</td>\n                    <td>\n                      <a \n                        href={`https://sepolia.etherscan.io/tx/${result.txHash}`} \n                        target=\"_blank\" \n                        rel=\"noopener noreferrer\"\n                      >\n                        {result.txHash.substring(0, 10)}...\n                      </a>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n\n            <div className=\"comparison\">\n              <button onClick={compareTransactions}>\n                Compare Last Two Transactions\n              </button>\n              {comparison && (\n                <div className=\"comparison-result\">\n                  <h3>Comparison Result:</h3>\n                  <p>{comparison}</p>\n                </div>\n              )}\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}